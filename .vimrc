
" put the cursor on the folded line 
" and press za to open folds 

" welcome-page {{{
"
"'##::::'##:'####:'##::::'##:'########:::'######::
" ##:::: ##:. ##:: ###::'###: ##.... ##:'##... ##:
" ##:::: ##:: ##:: ####'####: ##:::: ##: ##:::..::
" ##:::: ##:: ##:: ## ### ##: ########:: ##:::::::
". ##:: ##::: ##:: ##. #: ##: ##.. ##::: ##:::::::    Ascii art generated by: 
":. ## ##:::: ##:: ##:.:: ##: ##::. ##:: ##::: ##:    http://www.network-science.de/ascii/ 
"::. ###::::'####: ##:::: ##: ##:::. ##:. ######::    
":::...:::::....::..:::::..::..:::::..:::......:::
"
" This is a portable vimrc that can be used as a starter.
"
" Made by: Justine J. Casiano,
" with the help of vim user-manual and internet posts.
"
" Some of them are:
" https://stackoverflow.com/
" https://vim.fandom.com/wiki/Vim_Tips_Wiki
" https://github.com/iggredible/Learn-Vim
" https://learnvim.irian.to/
"
" Vim plugins that is used:
" vim-plug           - https://github.com/junegunn/vim-plug
" vim-fzf            - https://github.com/junegunn/fzf.vim
" gruvbox            - https://github.com/morhetz/gruvbox
" vim airline        - https://github.com/vim-airline/vim-airline
" vim-airline-themes - https://vimawesome.com/plugin/vim-airline-themes
" vim-startify       - https://github.com/mhinz/vim-startify
"
" Fonts that is used:
" JetBrains Mono patched font - https://github.com/ryanoasis/nerd-fonts
" Powerline Symbols           - https://github.com/powerline/fonts
"
" Command-line utilities that is used:
" fzf     - https://github.com/junegunn/fzf
" ripgrep - https://github.com/BurntSushi/ripgrep
" bat     - https://github.com/sharkdp/bat
" ctags   - https://github.com/universal-ctags/ctags
" 
" Huge thanks for all the people that works 
" in these projects!
"
" }}}

" manual-page {{{
"
" Prerequisites to use this config:
" Basic vim navigation
" Grit and motivation to use vim
" Terminal that supports UTF-8 and 256 colors
"
" Unix-like system     - for the availability of the plugins and command-line tools
" A good terminal font - I use JetBrains Mono patched font
" Powerline Symbols    - for vim-airline
" Ripgrep(rg)          - used for searching patterns recursively
" Fuzzy finder(fzf)    - a command-line finder
" Bat(bat)             - a cat clone with syntax highlighting
" ctags(ctags)         - to jump between files
"
" Summary of useful keyboard shortcuts:
" Leader key = Space
"
" Normal/Terminal-Normal Mode
" za        - open/close folds
" zf{       - folds the code where the cursor is
" i         - insert mode
" o         - insert line below and go insert mode
" O         - insert line above and go insert mode
" h         - go left
" j         - go down
" k         - go up
" l         - go right
" gg        - go to top of the file 
" G         - go to bottom of the file
" --        - go to previous line number
" w         - go 1 word forward
" b         - go 1 word backward
" u         - undo
" rx        - replace character at cursor position with x
" Ctrl-r    - redo
" Ctrl-]    - go to definition
" Ctrl-o    - go back
" Ctrl-i    - undo go back
" x         - delete the character on where the cursor is 
" dd        - delete line
" p         - paste yanked/last deleted line
"
" Space-q   - quit 
" Space-s   - save file
" Backspace - delete active buffer
" Space-t-t - open terminal
" Space-t-j - open terminal and compile java program
" Space-r   - reload all buffers
" jk        - close terminal
"
" Insert Mode 
" jk     - leave insert mode and save file
"
" Visual Mode
" v         - visual mode
" V         - visual line select
" Ctrl-v    - vertical select
" jk        - leave visual mode
"
" Terminal Mode
" jk      - leave terminal mode
" Space-e - terminal-normal mode
" i       - quit terminal-normal mode
"
" }}}

" setup folds {{{

augroup filetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END

" }}}

" plugins {{{
 
call plug#begin('~/.vim/plugged')

  Plug 'morhetz/gruvbox'
  Plug 'junegunn/fzf.vim'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'mhinz/vim-startify'
  Plug 'tpope/vim-surround'

call plug#end()

" }}}

" configs {{{

set nocompatible
set relativenumber
set number
set termguicolors
set hlsearch
set ignorecase
set incsearch
set noswapfile
set tabstop=4 
set shiftwidth=4 
set smarttab
set autoindent
set undofile
set hidden
set encoding=utf-8 		 " The encoding displayed.
set fileencoding=utf-8   " The encoding written to file.
set modifiable
set t_Co=256
set noshowmode
set noshowcmd
set noruler
set shortmess+=F
set splitbelow
set termwinsize=20x0
set autochdir
set shell=/usr/bin/fish

syntax on
filetype on
filetype plugin indent on

set grepprg=rg\ --vimgrep\ --smart-case\ --follow

" }}}

" functions {{{
"
"  
" }}}

" mappings {{{

inoremap jk <Esc>:write<CR>			
inoremap " ""<left>
inoremap ' ''<left>
inoremap (<Space> ()<left>
inoremap [<Space> []<left>
inoremap {<Space> {}<left>
inoremap (;<Space> ();<left><left>
inoremap {;<Space> {};<left><left>
inoremap [; [];<left><left>
inoremap <<Space> <><left>
inoremap </ </><left>

inoremap {<CR> {<CR>}<Esc>O
inoremap (<CR> (<CR>)<Esc>O
inoremap {;<CR> {<CR>};<Esc>O
inoremap (;<CR> (<CR>);<Esc>O

let mapleader = "\<Space>"

nnoremap -- ``
nnoremap <Leader>tt :term<CR>
nnoremap <Leader>tj :term<CR>java Main.java<CR>
nnoremap <Leader>ti :term<CR>java Main.java < input.txt<CR>
nnoremap <Leader>tc :term<CR>javac *.java<CR>
nnoremap <Leader>q :quit<CR>
nnoremap <Leader>s :write<CR>
nnoremap <Bs> :bdelete<CR>
nnoremap <Leader>r :bufdo e<CR>

xnoremap <Leader>q <Esc> 

tnoremap <Leader>e <C-\><C-n> 
tnoremap jk <C-w><C-c>

" startify plugin 
nnoremap <C-n> :Startify<cr>

" fuzzy-finder plugin with ripgrep

" search in files
nnoremap <silent> <C-f> :Files<CR>

" search in opened buffer
nnoremap <silent> <Leader>b :Buffers<CR>

" search in the filesystem 
nnoremap <silent> <Leader>f :Rg<CR>

" search lines in current buffer 
nnoremap <silent> <Leader>/ :BLines<CR>

" search marks
nnoremap <silent> <Leader>' :Marks<CR>

" search commits
nnoremap <silent> <Leader>g :Commits<CR>

" search in help 
nnoremap <silent> <Leader>H :Helptags<CR>

" search in file history 
nnoremap <silent> <Leader>hh :History<CR>

" search in command history 
nnoremap <silent> <Leader>h: :History:<CR>

" search in search history
nnoremap <silent> <Leader>h/ :History/<CR>	

" }}}

" themes {{{

" for gruvbox theme - https://github.com/morhetz/gruvbox
colorscheme gruvbox

let g:airline_theme='base16_gruvbox_dark_medium'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_powerline_fonts = 1
let g:airline_section_z = airline#section#create(['%3p%% %L:%3v'])
let g:airline#extensions#whitespace#enabled = 0

" for fzf-vim - 
let g:fzf_colors =
  \ { 'fg':      ['fg', 'Normal'],
    \ 'bg':      ['bg', 'Normal'],
    \ 'hl':      ['fg', 'Comment'],
    \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
    \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
    \ 'hl+':     ['fg', 'Statement'],
    \ 'info':    ['fg', 'PreProc'],
    \ 'border':  ['fg', 'Ignore'],
    \ 'prompt':  ['fg', 'Conditional'],
    \ 'pointer': ['fg', 'Exception'],
    \ 'marker':  ['fg', 'Keyword'],
    \ 'spinner': ['fg', 'Label'],
    \ 'header':  ['fg', 'Comment'] } 
   
" vim-startify
let g:startify_bookmarks = [
  \ { 'b': '~/.bashrc' },
  \ { 'v': '~/.vimrc' },
  \ { 'p': '~/.profile' },
  \ ]

let g:startify_custom_header = [
 \ ' `##:::::`##:`########:`##::::::::`######:::`#######::`##::::`##:`########: ',
 \ '  ##:`##: ##: ##.....:: ##:::::::`##... ##:`##.... ##: ###::`###: ##.....:: ',
 \ '  ##: ##: ##: ##::::::: ##::::::: ##:::..:: ##:::: ##: ####`####: ##::::::: ',
 \ '  ##: ##: ##: ######::: ##::::::: ##::::::: ##:::: ##: ## ### ##: ######::: ',
 \ '  ##: ##: ##: ##...:::: ##::::::: ##::::::: ##:::: ##: ##. #: ##: ##...:::: ',
 \ '  ##: ##: ##: ##::::::: ##::::::: ##::: ##: ##:::: ##: ##:.:: ##: ##::::::: ',
 \ '   ###. ###:: ########: ########:. ######::. #######:: ##:::: ##: ########: ',
 \ ]

let g:startify_fortune_use_unicode = 0
let g:startify_files_number = 3
let g:startify_lists = [
    \ { 'header': ['   Bookmarks'],             'type': 'bookmarks' },
    \ { 'header': ['   Commands'],              'type': 'commands' },
    \ ]
        
let g:startify_commands = [
    \ ['Search Files', 'Files'],
    \ ]

" }}}                                                                      
                                                                           
                                                                           
                                                                                                              
                                                                           
																	   
                                                                           
                                                                           
